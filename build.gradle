version = '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

sourceSets {
    test.java.srcDirs 'src/test/java'
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.6.0'
    testCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.0.5'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.9.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.9.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile group: 'org.springframework', name: 'spring-jdbc', version: '5.0.1.RELEASE'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.8-dmr'
}

ext {
    supportedVariables = ["dbPassword","dbUser", "googlePlacesKey"]
}

tasks.withType(Test) {
    supportedVariables.each {
        if (project.hasProperty(it)) {
            systemProperties[it] = project.properties[it]
        }
    }
    useJUnit()
    dependsOn 'cleanTest'
    testLogging.exceptionFormat = 'full'
    testLogging {
        events "passed", "failed", "standardOut"
        displayGranularity 1
    }
}

tasks.withType(Test){
    reports {
        junitXml.enabled = true
        html.enabled = true
    }
}

task testMulti(type:Test) {
    include 'SeleniumTests/*'
    maxParallelForks = 4

}

task testSingle(type: Test){
    maxParallelForks = 1
    include 'threadsafetests/*'
}

task testRestApi(type:Test){
    maxParallelForks = 8
    include 'REST/*'
}
testMulti.mustRunAfter(testRestApi)
testSingle.mustRunAfter(testMulti)






